{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (2)\\\\blockchain\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport SupplyChainContract from './contracts/SupplyChain.json'; // Ensure this path is correct based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [contract, setContract] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [productName, setProductName] = useState('');\n  const [productDetails, setProductDetails] = useState('');\n\n  // Function to load blockchain data and initialize contract\n  const loadBlockchainData = async () => {\n    try {\n      console.log(\"Loading blockchain data...\");\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\"); // Ensure Ganache is running on this port\n\n      // Fetch user accounts from MetaMask\n      const accounts = await web3.eth.requestAccounts();\n      console.log(\"Connected account:\", accounts[0]);\n      setAccount(accounts[0]);\n\n      // Get the network ID\n      const networkId = await web3.eth.net.getId();\n      console.log(\"Network ID:\", networkId);\n      const networkData = SupplyChainContract.networks[networkId];\n      if (networkData) {\n        // Initialize contract instance\n        const supplyChain = new web3.eth.Contract(SupplyChainContract.abi, networkData.address);\n        setContract(supplyChain);\n        console.log(\"Contract Address:\", networkData.address);\n\n        // Load product count and details\n        const productCount = await supplyChain.methods.productCounter().call();\n        console.log(\"Total Products:\", productCount);\n        const productsArray = [];\n        for (let i = 1; i <= productCount; i++) {\n          const product = await supplyChain.methods.products(i).call();\n          productsArray.push(product);\n          console.log(\"Product Loaded:\", product);\n        }\n        setProducts(productsArray);\n      } else {\n        alert(\"Smart contract not deployed to detected network.\");\n      }\n    } catch (error) {\n      console.error(\"Error loading blockchain data:\", error);\n    }\n  };\n\n  // Function to add a new product\n  const addProduct = async () => {\n    if (contract && productName && productDetails) {\n      try {\n        console.log(\"Adding product with name:\", productName, \"and details:\", productDetails);\n        await contract.methods.addProduct(productName, productDetails).send({\n          from: account\n        });\n        alert(\"Product added successfully!\");\n\n        // Reload products to show the newly added product\n        loadBlockchainData();\n      } catch (error) {\n        console.error(\"Error adding product:\", error);\n        alert(\"Transaction failed. Check the console for details.\");\n      }\n    } else {\n      alert(\"Please connect to the contract and fill in product details.\");\n    }\n  };\n\n  // Load blockchain data when the component mounts\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Supply Chain Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create a New Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Product Name\",\n        value: productName,\n        onChange: e => setProductName(e.target.value),\n        style: {\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Product Details\",\n        value: productDetails,\n        onChange: e => setProductDetails(e.target.value),\n        style: {\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addProduct,\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Products List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), products.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), \" \", product.productName, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), \" \", product.productDetails, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Owner:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), \" \", product.owner]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No products available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yUXFjIAhzpUwH+8TFCAEqxenC5c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","SupplyChainContract","jsxDEV","_jsxDEV","App","_s","account","setAccount","contract","setContract","products","setProducts","productName","setProductName","productDetails","setProductDetails","loadBlockchainData","console","log","web3","givenProvider","accounts","eth","requestAccounts","networkId","net","getId","networkData","networks","supplyChain","Contract","abi","address","productCount","methods","productCounter","call","productsArray","i","product","push","alert","error","addProduct","send","from","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","marginRight","onClick","marginTop","length","map","index","owner","_c","$RefreshReg$"],"sources":["E:/New folder (2)/blockchain/project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport SupplyChainContract from './contracts/SupplyChain.json'; // Ensure this path is correct based on your project structure\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState('');\r\n  const [contract, setContract] = useState(null);\r\n  const [products, setProducts] = useState([]);\r\n  const [productName, setProductName] = useState('');\r\n  const [productDetails, setProductDetails] = useState('');\r\n\r\n  // Function to load blockchain data and initialize contract\r\n  const loadBlockchainData = async () => {\r\n    try {\r\n      console.log(\"Loading blockchain data...\");\r\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\"); // Ensure Ganache is running on this port\r\n\r\n      // Fetch user accounts from MetaMask\r\n      const accounts = await web3.eth.requestAccounts();\r\n      console.log(\"Connected account:\", accounts[0]);\r\n      setAccount(accounts[0]);\r\n\r\n      // Get the network ID\r\n      const networkId = await web3.eth.net.getId();\r\n      console.log(\"Network ID:\", networkId);\r\n      const networkData = SupplyChainContract.networks[networkId];\r\n\r\n      if (networkData) {\r\n        // Initialize contract instance\r\n        const supplyChain = new web3.eth.Contract(SupplyChainContract.abi, networkData.address);\r\n        setContract(supplyChain);\r\n        console.log(\"Contract Address:\", networkData.address);\r\n\r\n        // Load product count and details\r\n        const productCount = await supplyChain.methods.productCounter().call();\r\n        console.log(\"Total Products:\", productCount);\r\n        const productsArray = [];\r\n        for (let i = 1; i <= productCount; i++) {\r\n          const product = await supplyChain.methods.products(i).call();\r\n          productsArray.push(product);\r\n          console.log(\"Product Loaded:\", product);\r\n        }\r\n        setProducts(productsArray);\r\n      } else {\r\n        alert(\"Smart contract not deployed to detected network.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading blockchain data:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to add a new product\r\n  const addProduct = async () => {\r\n    if (contract && productName && productDetails) {\r\n      try {\r\n        console.log(\"Adding product with name:\", productName, \"and details:\", productDetails);\r\n        await contract.methods.addProduct(productName, productDetails).send({ from: account });\r\n        alert(\"Product added successfully!\");\r\n\r\n        // Reload products to show the newly added product\r\n        loadBlockchainData();\r\n      } catch (error) {\r\n        console.error(\"Error adding product:\", error);\r\n        alert(\"Transaction failed. Check the console for details.\");\r\n      }\r\n    } else {\r\n      alert(\"Please connect to the contract and fill in product details.\");\r\n    }\r\n  };\r\n\r\n  // Load blockchain data when the component mounts\r\n  useEffect(() => {\r\n    loadBlockchainData();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Supply Chain Management</h2>\r\n      <p>Connected Account: {account}</p>\r\n\r\n      <div>\r\n        <h3>Create a New Product</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Product Name\"\r\n          value={productName}\r\n          onChange={(e) => setProductName(e.target.value)}\r\n          style={{ marginRight: \"10px\" }}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Product Details\"\r\n          value={productDetails}\r\n          onChange={(e) => setProductDetails(e.target.value)}\r\n          style={{ marginRight: \"10px\" }}\r\n        />\r\n        <button onClick={addProduct}>Add Product</button>\r\n      </div>\r\n\r\n      <div style={{ marginTop: \"20px\" }}>\r\n        <h3>Products List</h3>\r\n        {products.length > 0 ? (\r\n          <ul>\r\n            {products.map((product, index) => (\r\n              <li key={index}>\r\n                <strong>Name:</strong> {product.productName} | \r\n                <strong> Details:</strong> {product.productDetails} |\r\n                <strong> Owner:</strong> {product.owner}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No products available.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}