{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (2)\\\\blockchain\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport SupplyChain from './contracts/SupplyChain.json';\nimport Navbar from './components/navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [contract, setContract] = useState(null);\n  const [productName, setProductName] = useState('');\n  const [productDescription, setProductDescription] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n  }, []);\n\n  // Load Web3 and connect MetaMask\n  const loadWeb3 = async () => {\n    const provider = await detectEthereumProvider();\n    if (provider) {\n      console.log(\"MetaMask detected\");\n      window.web3 = new Web3(provider);\n      try {\n        const accounts = await provider.request({\n          method: 'eth_requestAccounts'\n        });\n        setAccount(accounts[0]); // Set the first account\n        console.log(\"Account connected: \", accounts[0]);\n        console.log(\"Web3 version:\", window.web3.version); // Log Web3 version for debugging\n        const networkId = await window.web3.eth.net.getId();\n        console.log(\"Connected to network ID:\", networkId); // Log network ID for debugging\n      } catch (error) {\n        console.error(\"Error getting accounts from MetaMask:\", error);\n      }\n    } else {\n      alert('MetaMask is not installed. Please install MetaMask to interact with this DApp.');\n    }\n  };\n\n  // Load blockchain data (contract, products)\n  const loadBlockchainData = async () => {\n    try {\n      const web3 = window.web3;\n      const accounts = await web3.eth.getAccounts();\n      setAccount(accounts[0]);\n      const networkId = await web3.eth.net.getId();\n      const networkData = SupplyChain.networks[networkId];\n      if (networkData) {\n        const supplyChain = new web3.eth.Contract(SupplyChain.abi, networkData.address);\n        setContract(supplyChain);\n        console.log(\"Contract loaded:\", supplyChain);\n        const productCount = await supplyChain.methods.productCounter().call();\n        const loadedProducts = [];\n        for (let i = 1; i <= productCount; i++) {\n          const product = await supplyChain.methods.products(i).call();\n          loadedProducts.push(product);\n        }\n        setProducts(loadedProducts);\n      } else {\n        alert('Smart contract not deployed to the detected network.');\n      }\n    } catch (error) {\n      console.error(\"Error loading blockchain data:\", error);\n    }\n  };\n\n  // Create a new product\n  const createProduct = async () => {\n    if (!contract) {\n      console.log(\"Contract is not loaded.\");\n      return;\n    }\n    try {\n      const weiPrice = Web3.utils.toWei(productPrice, 'Ether');\n      await contract.methods.createProduct(productName, productDescription, weiPrice).send({\n        from: account\n      });\n      window.location.reload(); // Reload page after product creation\n    } catch (error) {\n      console.error(\"Error creating product:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Supply Chain DApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Account: \", account || \"Not connected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a New Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Product Name\",\n        value: productName,\n        onChange: e => setProductName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Product Description\",\n        value: productDescription,\n        onChange: e => setProductDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Product Price (in ETH)\",\n        value: productPrice,\n        onChange: e => setProductPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createProduct,\n        children: \"Create Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), \" - \", product.description, \" - \", Web3.utils.fromWei(product.price, 'Ether'), \" ETH\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6zAhi7VtbYM3/mW0/FkTNjPNFc0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Web3","detectEthereumProvider","SupplyChain","Navbar","jsxDEV","_jsxDEV","App","_s","account","setAccount","contract","setContract","productName","setProductName","productDescription","setProductDescription","productPrice","setProductPrice","products","setProducts","loadWeb3","loadBlockchainData","provider","console","log","window","web3","accounts","request","method","version","networkId","eth","net","getId","error","alert","getAccounts","networkData","networks","supplyChain","Contract","abi","address","productCount","methods","productCounter","call","loadedProducts","i","product","push","createProduct","weiPrice","utils","toWei","send","from","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","map","index","name","description","fromWei","price","_c","$RefreshReg$"],"sources":["E:/New folder (2)/blockchain/project/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Web3 from 'web3';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport SupplyChain from './contracts/SupplyChain.json';\r\nimport Navbar from './components/navbar';\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState('');\r\n  const [contract, setContract] = useState(null);\r\n  const [productName, setProductName] = useState('');\r\n  const [productDescription, setProductDescription] = useState('');\r\n  const [productPrice, setProductPrice] = useState('');\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadWeb3();\r\n    loadBlockchainData();\r\n  }, []);\r\n\r\n  // Load Web3 and connect MetaMask\r\n  const loadWeb3 = async () => {\r\n    const provider = await detectEthereumProvider();\r\n\r\n    if (provider) {\r\n      console.log(\"MetaMask detected\");\r\n      window.web3 = new Web3(provider);\r\n      try {\r\n        const accounts = await provider.request({ method: 'eth_requestAccounts' });\r\n        setAccount(accounts[0]);  // Set the first account\r\n        console.log(\"Account connected: \", accounts[0]);\r\n\r\n        console.log(\"Web3 version:\", window.web3.version);  // Log Web3 version for debugging\r\n        const networkId = await window.web3.eth.net.getId();\r\n        console.log(\"Connected to network ID:\", networkId);  // Log network ID for debugging\r\n      } catch (error) {\r\n        console.error(\"Error getting accounts from MetaMask:\", error);\r\n      }\r\n    } else {\r\n      alert('MetaMask is not installed. Please install MetaMask to interact with this DApp.');\r\n    }\r\n  };\r\n\r\n  // Load blockchain data (contract, products)\r\n  const loadBlockchainData = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      const accounts = await web3.eth.getAccounts();\r\n      setAccount(accounts[0]);\r\n\r\n      const networkId = await web3.eth.net.getId();\r\n      const networkData = SupplyChain.networks[networkId];\r\n\r\n      if (networkData) {\r\n        const supplyChain = new web3.eth.Contract(SupplyChain.abi, networkData.address);\r\n        setContract(supplyChain);\r\n        console.log(\"Contract loaded:\", supplyChain);\r\n\r\n        const productCount = await supplyChain.methods.productCounter().call();\r\n        const loadedProducts = [];\r\n        for (let i = 1; i <= productCount; i++) {\r\n          const product = await supplyChain.methods.products(i).call();\r\n          loadedProducts.push(product);\r\n        }\r\n        setProducts(loadedProducts);\r\n      } else {\r\n        alert('Smart contract not deployed to the detected network.');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading blockchain data:\", error);\r\n    }\r\n  };\r\n\r\n  // Create a new product\r\n  const createProduct = async () => {\r\n    if (!contract) {\r\n      console.log(\"Contract is not loaded.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const weiPrice = Web3.utils.toWei(productPrice, 'Ether');\r\n      await contract.methods\r\n        .createProduct(productName, productDescription, weiPrice)\r\n        .send({ from: account });\r\n      window.location.reload();  // Reload page after product creation\r\n    } catch (error) {\r\n      console.error(\"Error creating product:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar account={account} />\r\n      <div className=\"container\">\r\n        <h1>Supply Chain DApp</h1>\r\n        <p>Your Account: {account || \"Not connected\"}</p>\r\n\r\n        <h2>Create a New Product</h2>\r\n        <input type=\"text\" placeholder=\"Product Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Product Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Product Price (in ETH)\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\r\n        <button onClick={createProduct}>Create Product</button>\r\n\r\n        <h2>Available Products</h2>\r\n        <ul>\r\n          {products.map((product, index) => (\r\n            <li key={index}>\r\n              <strong>{product.name}</strong> - {product.description} - {Web3.utils.fromWei(product.price, 'Ether')} ETH\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}