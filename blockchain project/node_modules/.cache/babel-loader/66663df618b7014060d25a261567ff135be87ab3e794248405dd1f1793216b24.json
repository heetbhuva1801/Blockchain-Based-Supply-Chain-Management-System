{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (2)\\\\blockchain\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport SupplyChain from './contracts/SupplyChain.json';\nimport Navbar from './components/navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [contract, setContract] = useState(null);\n  const [productName, setProductName] = useState('');\n  const [productDescription, setProductDescription] = useState('');\n  const [productPrice, setProductPrice] = useState('');\n  const [productType, setProductType] = useState('');\n  const [serialNumber, setSerialNumber] = useState('');\n  const [manufacturer, setManufacturer] = useState('');\n  const [certification, setCertification] = useState('');\n  const [warranty, setWarranty] = useState('');\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    loadWeb3();\n    loadBlockchainData();\n  }, []);\n\n  // Load Web3 and connect MetaMask\n  const loadWeb3 = async () => {\n    const provider = await detectEthereumProvider();\n    if (provider) {\n      console.log(\"MetaMask detected\");\n      window.web3 = new Web3(provider);\n      try {\n        const accounts = await provider.request({\n          method: 'eth_requestAccounts'\n        });\n        setAccount(accounts[0]); // Set the first account\n        console.log(\"Account connected: \", accounts[0]);\n        console.log(\"Web3 version:\", window.web3.version); // Log the Web3 version to ensure it's initialized\n        const networkId = await window.web3.eth.net.getId();\n        console.log(\"Connected to network ID:\", networkId); // Log the network ID to verify you're on the right network (should match Ganache)\n      } catch (error) {\n        console.error(\"User denied account access\", error);\n      }\n    } else {\n      alert('Please install MetaMask to interact with this DApp!');\n    }\n  };\n\n  // Load blockchain data (contract, products)\n  const loadBlockchainData = async () => {\n    try {\n      const web3 = window.web3;\n      const accounts = await web3.eth.getAccounts();\n      setAccount(accounts[0]);\n      const networkId = await web3.eth.net.getId();\n      const networkData = SupplyChain.networks[networkId];\n      if (networkData) {\n        const supplyChain = new web3.eth.Contract(SupplyChain.abi, networkData.address);\n        setContract(supplyChain);\n        console.log(\"Contract loaded: \", supplyChain);\n        const productCount = await supplyChain.methods.productCounter().call();\n        console.log(\"Product count:\", productCount); // Log the number of products\n\n        const loadedProducts = [];\n        for (let i = 1; i <= productCount; i++) {\n          try {\n            const product = await supplyChain.methods.products(i).call();\n            console.log(\"Product fetched:\", product); // Log each product fetched\n            loadedProducts.push(product);\n          } catch (error) {\n            console.error(`Error fetching product ${i}:`, error); // Log any errors fetching products\n          }\n        }\n        setProducts(loadedProducts);\n      } else {\n        alert('Smart contract not deployed to the detected network.');\n      }\n    } catch (error) {\n      console.error(\"Error loading blockchain data:\", error);\n    }\n  };\n\n  // Create a new product (with electronics-specific data)\n  const createProduct = async () => {\n    if (!contract) {\n      console.log(\"Contract is not loaded.\");\n      return;\n    }\n    try {\n      console.log(\"Attempting to create product with the following details:\");\n      console.log(\"Name:\", productName);\n      console.log(\"Description:\", productDescription);\n      console.log(\"Price (ETH):\", productPrice);\n      console.log(\"Type:\", productType);\n      console.log(\"Serial Number:\", serialNumber);\n      console.log(\"Manufacturer:\", manufacturer);\n      console.log(\"Certification:\", certification);\n      console.log(\"Warranty:\", warranty);\n      const weiPrice = Web3.utils.toWei(productPrice, 'Ether');\n      console.log(\"Price in Wei:\", weiPrice);\n\n      // Check account and contract before calling the function\n      console.log(\"Account:\", account);\n      console.log(\"Contract Address:\", contract.options.address);\n\n      // Send transaction\n      const result = await contract.methods.createProduct(productName, productDescription, weiPrice, productType, serialNumber, manufacturer, certification, warranty).send({\n        from: account\n      }).on('transactionHash', function (hash) {\n        console.log(\"Transaction hash:\", hash);\n      }).on('receipt', function (receipt) {\n        console.log(\"Transaction successful, receipt:\", receipt);\n        window.location.reload(); // Reload page after product creation\n      });\n      console.log(\"Transaction Result:\", result);\n    } catch (error) {\n      console.error(\"Error creating product:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      account: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Supply Chain DApp (Electronics)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Account: \", account || \"Not connected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a New Electronic Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Product Name\",\n        value: productName,\n        onChange: e => setProductName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Product Description\",\n        value: productDescription,\n        onChange: e => setProductDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Product Price (in ETH)\",\n        value: productPrice,\n        onChange: e => setProductPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Product Type (e.g., Smartphone, Microchip)\",\n        value: productType,\n        onChange: e => setProductType(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Serial Number\",\n        value: serialNumber,\n        onChange: e => setSerialNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Manufacturer\",\n        value: manufacturer,\n        onChange: e => setManufacturer(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Certification (e.g., CE, RoHS)\",\n        value: certification,\n        onChange: e => setCertification(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Warranty\",\n        value: warranty,\n        onChange: e => setWarranty(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createProduct,\n        children: \"Create Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), \" - \", product.description, \" - \", product.productType, \" - \", product.serialNumber, \" - \", Web3.utils.fromWei(product.price, 'Ether'), \" ETH\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PlmVkiOEZXjfylk31PC5ob7QPEE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Web3","detectEthereumProvider","SupplyChain","Navbar","jsxDEV","_jsxDEV","App","_s","account","setAccount","contract","setContract","productName","setProductName","productDescription","setProductDescription","productPrice","setProductPrice","productType","setProductType","serialNumber","setSerialNumber","manufacturer","setManufacturer","certification","setCertification","warranty","setWarranty","products","setProducts","loadWeb3","loadBlockchainData","provider","console","log","window","web3","accounts","request","method","version","networkId","eth","net","getId","error","alert","getAccounts","networkData","networks","supplyChain","Contract","abi","address","productCount","methods","productCounter","call","loadedProducts","i","product","push","createProduct","weiPrice","utils","toWei","options","result","send","from","on","hash","receipt","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","map","index","name","description","fromWei","price","_c","$RefreshReg$"],"sources":["E:/New folder (2)/blockchain/project/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Web3 from 'web3';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport SupplyChain from './contracts/SupplyChain.json';\r\nimport Navbar from './components/navbar';\r\n\r\nfunction App() {\r\n  const [account, setAccount] = useState('');\r\n  const [contract, setContract] = useState(null);\r\n  const [productName, setProductName] = useState('');\r\n  const [productDescription, setProductDescription] = useState('');\r\n  const [productPrice, setProductPrice] = useState('');\r\n  const [productType, setProductType] = useState('');\r\n  const [serialNumber, setSerialNumber] = useState('');\r\n  const [manufacturer, setManufacturer] = useState('');\r\n  const [certification, setCertification] = useState('');\r\n  const [warranty, setWarranty] = useState('');\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadWeb3();\r\n    loadBlockchainData();\r\n  }, []);\r\n\r\n  // Load Web3 and connect MetaMask\r\n  const loadWeb3 = async () => {\r\n    const provider = await detectEthereumProvider();\r\n\r\n    if (provider) {\r\n      console.log(\"MetaMask detected\");\r\n      window.web3 = new Web3(provider);\r\n      try {\r\n        const accounts = await provider.request({ method: 'eth_requestAccounts' });\r\n        setAccount(accounts[0]); // Set the first account\r\n        console.log(\"Account connected: \", accounts[0]);\r\n        console.log(\"Web3 version:\", window.web3.version);  // Log the Web3 version to ensure it's initialized\r\n        const networkId = await window.web3.eth.net.getId();\r\n        console.log(\"Connected to network ID:\", networkId);  // Log the network ID to verify you're on the right network (should match Ganache)\r\n      } catch (error) {\r\n        console.error(\"User denied account access\", error);\r\n      }\r\n    } else {\r\n      alert('Please install MetaMask to interact with this DApp!');\r\n    }\r\n  };\r\n\r\n  // Load blockchain data (contract, products)\r\n  const loadBlockchainData = async () => {\r\n    try {\r\n      const web3 = window.web3;\r\n      const accounts = await web3.eth.getAccounts();\r\n      setAccount(accounts[0]);\r\n\r\n      const networkId = await web3.eth.net.getId();\r\n      const networkData = SupplyChain.networks[networkId];\r\n\r\n      if (networkData) {\r\n        const supplyChain = new web3.eth.Contract(SupplyChain.abi, networkData.address);\r\n        setContract(supplyChain);\r\n        console.log(\"Contract loaded: \", supplyChain);\r\n\r\n        const productCount = await supplyChain.methods.productCounter().call();\r\n        console.log(\"Product count:\", productCount);  // Log the number of products\r\n\r\n        const loadedProducts = [];\r\n        for (let i = 1; i <= productCount; i++) {\r\n          try {\r\n            const product = await supplyChain.methods.products(i).call();\r\n            console.log(\"Product fetched:\", product);  // Log each product fetched\r\n            loadedProducts.push(product);\r\n          } catch (error) {\r\n            console.error(`Error fetching product ${i}:`, error);  // Log any errors fetching products\r\n          }\r\n        }\r\n        setProducts(loadedProducts);\r\n      } else {\r\n        alert('Smart contract not deployed to the detected network.');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading blockchain data:\", error);\r\n    }\r\n  };\r\n\r\n  // Create a new product (with electronics-specific data)\r\n  const createProduct = async () => {\r\n    if (!contract) {\r\n      console.log(\"Contract is not loaded.\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log(\"Attempting to create product with the following details:\");\r\n      console.log(\"Name:\", productName);\r\n      console.log(\"Description:\", productDescription);\r\n      console.log(\"Price (ETH):\", productPrice);\r\n      console.log(\"Type:\", productType);\r\n      console.log(\"Serial Number:\", serialNumber);\r\n      console.log(\"Manufacturer:\", manufacturer);\r\n      console.log(\"Certification:\", certification);\r\n      console.log(\"Warranty:\", warranty);\r\n\r\n      const weiPrice = Web3.utils.toWei(productPrice, 'Ether');\r\n      console.log(\"Price in Wei:\", weiPrice);\r\n\r\n      // Check account and contract before calling the function\r\n      console.log(\"Account:\", account);\r\n      console.log(\"Contract Address:\", contract.options.address);\r\n\r\n      // Send transaction\r\n      const result = await contract.methods\r\n        .createProduct(\r\n          productName,\r\n          productDescription,\r\n          weiPrice,\r\n          productType,\r\n          serialNumber,\r\n          manufacturer,\r\n          certification,\r\n          warranty\r\n        )\r\n        .send({ from: account })\r\n        .on('transactionHash', function (hash) {\r\n          console.log(\"Transaction hash:\", hash);\r\n        })\r\n        .on('receipt', function (receipt) {\r\n          console.log(\"Transaction successful, receipt:\", receipt);\r\n          window.location.reload(); // Reload page after product creation\r\n        });\r\n\r\n      console.log(\"Transaction Result:\", result);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error creating product:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar account={account} />\r\n      <div className=\"container\">\r\n        <h1>Supply Chain DApp (Electronics)</h1>\r\n        <p>Your Account: {account || \"Not connected\"}</p>\r\n\r\n        <h2>Create a New Electronic Product</h2>\r\n        <input type=\"text\" placeholder=\"Product Name\" value={productName} onChange={(e) => setProductName(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Product Description\" value={productDescription} onChange={(e) => setProductDescription(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Product Price (in ETH)\" value={productPrice} onChange={(e) => setProductPrice(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Product Type (e.g., Smartphone, Microchip)\" value={productType} onChange={(e) => setProductType(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Serial Number\" value={serialNumber} onChange={(e) => setSerialNumber(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Manufacturer\" value={manufacturer} onChange={(e) => setManufacturer(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Certification (e.g., CE, RoHS)\" value={certification} onChange={(e) => setCertification(e.target.value)} />\r\n        <input type=\"text\" placeholder=\"Warranty\" value={warranty} onChange={(e) => setWarranty(e.target.value)} />\r\n        <button onClick={createProduct}>Create Product</button>\r\n\r\n        <h2>Available Products</h2>\r\n        <ul>\r\n          {products.map((product, index) => (\r\n            <li key={index}>\r\n              <strong>{product.name}</strong> - {product.description} - {product.productType} - {product.serialNumber} - {Web3.utils.fromWei(product.price, 'Ether')} ETH\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}